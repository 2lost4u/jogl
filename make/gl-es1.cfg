# This .cfg file is used to generate the GL interface and implementing class.
Package javax.media.opengl
Style InterfaceAndImpl
JavaClass GLES1
Extends GLES1 GL
Extends GLES1 GL2ES1
ImplPackage com.sun.opengl.impl.es1
ImplJavaClass GLES1Impl
Include gl-common-es1.cfg
Include gl-ignore-gl2_es-enums.cfg
Include gl-ignore-gl2_es1-enums.cfg

EmitProcAddressTable true
ProcAddressTableClassName GLES1ProcAddressTable
GetProcAddressTableExpr ((GLES1ProcAddressTable)_context.getGLProcAddressTable())

# Inform the glue code generator of the association between #defines
# and functions and the extensions in which they are defined
GLHeader GLES/gl.h
GLHeader GLES/glext.h

# Force all of the methods to be emitted using dynamic linking so we
# don't need to link against any emulation library on the desktop or
# depend on the presence of an import library for a particular device
ForceProcAddressGen glAlphaFunc
ForceProcAddressGen glClearColor
ForceProcAddressGen glClearDepthf
ForceProcAddressGen glClipPlanef
ForceProcAddressGen glColor4f
ForceProcAddressGen glDepthRangef
ForceProcAddressGen glFogf
ForceProcAddressGen glFogfv
ForceProcAddressGen glFrustumf
ForceProcAddressGen glGetClipPlanef
ForceProcAddressGen glGetFloatv
ForceProcAddressGen glGetLightfv
ForceProcAddressGen glGetMaterialfv
ForceProcAddressGen glGetTexEnvfv
ForceProcAddressGen glGetTexParameterfv
ForceProcAddressGen glLightModelf
ForceProcAddressGen glLightModelfv
ForceProcAddressGen glLightf
ForceProcAddressGen glLightfv
ForceProcAddressGen glLineWidth
ForceProcAddressGen glLoadMatrixf
ForceProcAddressGen glMaterialf
ForceProcAddressGen glMaterialfv
ForceProcAddressGen glMultMatrixf
ForceProcAddressGen glMultiTexCoord4f
ForceProcAddressGen glNormal3f
ForceProcAddressGen glOrthof
ForceProcAddressGen glPointParameterf
ForceProcAddressGen glPointParameterfv
ForceProcAddressGen glPointSize
ForceProcAddressGen glPolygonOffset
ForceProcAddressGen glRotatef
ForceProcAddressGen glScalef
ForceProcAddressGen glTexEnvf
ForceProcAddressGen glTexEnvfv
ForceProcAddressGen glTexParameterf
ForceProcAddressGen glTexParameterfv
ForceProcAddressGen glTranslatef
ForceProcAddressGen glActiveTexture
ForceProcAddressGen glAlphaFuncx
ForceProcAddressGen glBindBuffer
ForceProcAddressGen glBindTexture
ForceProcAddressGen glBlendFunc
ForceProcAddressGen glBufferData
ForceProcAddressGen glBufferSubData
ForceProcAddressGen glClear
ForceProcAddressGen glClearColorx
ForceProcAddressGen glClearDepthx
ForceProcAddressGen glClearStencil
ForceProcAddressGen glClientActiveTexture
ForceProcAddressGen glClipPlanex
ForceProcAddressGen glColor4ub
ForceProcAddressGen glColor4x
ForceProcAddressGen glColorMask
ForceProcAddressGen glColorPointer
ForceProcAddressGen glCompressedTexImage2D
ForceProcAddressGen glCompressedTexSubImage2D
ForceProcAddressGen glCopyTexImage2D
ForceProcAddressGen glCopyTexSubImage2D
ForceProcAddressGen glCullFace
ForceProcAddressGen glDeleteBuffers
ForceProcAddressGen glDeleteTextures
ForceProcAddressGen glDepthFunc
ForceProcAddressGen glDepthMask
ForceProcAddressGen glDepthRangex
ForceProcAddressGen glDisable
ForceProcAddressGen glDisableClientState
ForceProcAddressGen glDrawArrays
ForceProcAddressGen glDrawElements
ForceProcAddressGen glEnable
ForceProcAddressGen glEnableClientState
ForceProcAddressGen glFinish
ForceProcAddressGen glFlush
ForceProcAddressGen glFogx
ForceProcAddressGen glFogxv
ForceProcAddressGen glFrontFace
ForceProcAddressGen glFrustumx
ForceProcAddressGen glGetBooleanv
ForceProcAddressGen glGetBufferParameteriv
ForceProcAddressGen glGetClipPlanex
ForceProcAddressGen glGenBuffers
ForceProcAddressGen glGenTextures
ForceProcAddressGen glGetError
ForceProcAddressGen glGetFixedv
ForceProcAddressGen glGetIntegerv
ForceProcAddressGen glGetLightxv
ForceProcAddressGen glGetMaterialxv
ForceProcAddressGen glGetPointerv
ForceProcAddressGen glGetString
ForceProcAddressGen glGetTexEnviv
ForceProcAddressGen glGetTexEnvxv
ForceProcAddressGen glGetTexParameteriv
ForceProcAddressGen glGetTexParameterxv
ForceProcAddressGen glHint
ForceProcAddressGen glIsBuffer
ForceProcAddressGen glIsEnabled
ForceProcAddressGen glIsTexture
ForceProcAddressGen glLightModelx
ForceProcAddressGen glLightModelxv
ForceProcAddressGen glLightx
ForceProcAddressGen glLightxv
ForceProcAddressGen glLineWidthx
ForceProcAddressGen glLoadIdentity
ForceProcAddressGen glLoadMatrixx
ForceProcAddressGen glLogicOp
ForceProcAddressGen glMaterialx
ForceProcAddressGen glMaterialxv
ForceProcAddressGen glMatrixMode
ForceProcAddressGen glMultMatrixx
ForceProcAddressGen glMultiTexCoord4x
ForceProcAddressGen glNormal3x
ForceProcAddressGen glNormalPointer
ForceProcAddressGen glOrthox
ForceProcAddressGen glPixelStorei
ForceProcAddressGen glPointParameterx
ForceProcAddressGen glPointParameterxv
ForceProcAddressGen glPointSizex
ForceProcAddressGen glPolygonOffsetx
ForceProcAddressGen glPopMatrix
ForceProcAddressGen glPushMatrix
ForceProcAddressGen glReadPixels
ForceProcAddressGen glRotatex
ForceProcAddressGen glSampleCoverage
ForceProcAddressGen glSampleCoveragex
ForceProcAddressGen glScalex
ForceProcAddressGen glScissor
ForceProcAddressGen glShadeModel
ForceProcAddressGen glStencilFunc
ForceProcAddressGen glStencilMask
ForceProcAddressGen glStencilOp
ForceProcAddressGen glTexCoordPointer
ForceProcAddressGen glTexEnvi
ForceProcAddressGen glTexEnvx
ForceProcAddressGen glTexEnviv
ForceProcAddressGen glTexEnvxv
ForceProcAddressGen glTexImage2D
ForceProcAddressGen glTexParameteri
ForceProcAddressGen glTexParameterx
ForceProcAddressGen glTexParameteriv
ForceProcAddressGen glTexParameterxv
ForceProcAddressGen glTexSubImage2D
ForceProcAddressGen glTranslatex
ForceProcAddressGen glVertexPointer
ForceProcAddressGen glViewport
ForceProcAddressGen glPointSizePointerOES

# Pick up on-line OpenGL javadoc thanks to user cylab on javagaming.org forums
TagNativeBinding true

CustomJavaCode GLES1      public void glClearDepth(double depth);
CustomJavaCode GLES1Impl  public void glClearDepth(double depth) {
CustomJavaCode GLES1Impl   glClearDepthf((float)depth); }

CustomJavaCode GLES1      public void glDepthRange(double zNear, double zFar);
CustomJavaCode GLES1Impl  public void glDepthRange(double zNear, double zFar) {
CustomJavaCode GLES1Impl   glDepthRangef((float)zNear, (float)zFar); }

CustomCCode /* Define GL_GLEXT_PROTOTYPES so that the OpenGL extension prototypes in
CustomCCode    "glext.h" are parsed. */
CustomCCode #define GL_GLEXT_PROTOTYPES

CustomCCode /* Include the OpenGL headers */
CustomCCode /* #define GL_APICALL __declspec(dllimport) */
CustomCCode #include <GLES/gl.h>
CustomCCode #include <GLES/glext.h>
CustomCCode #include <stdlib.h>
# CustomCCode /* Include missing function pointer typedef */
# CustomCCode typedef void  (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image);

CustomCCode typedef int intptr_t;

IncludeAs CustomJavaCode GLES1Impl gl-impl-CustomJavaCode-common.java
IncludeAs CustomJavaCode GLES1Impl gl-impl-CustomJavaCode-gles1.java
IncludeAs CustomCCode gl-impl-CustomCCode.c

Import javax.media.opengl.GLES1
Import javax.media.opengl.GLES2
Import javax.media.opengl.GL2

